{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","React","memo","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","handleAddMovie","useState","title","setTitle","hasFoundMovie","setHasFoundMovie","newMovie","setNewMovie","isLoading","setIsLoading","isMovieRepeated","setIsMovieRepeated","findMovie","event","a","preventDefault","fetch","response","json","some","Response","Error","onSubmit","htmlFor","type","id","placeholder","cn","value","onChange","target","onClick","handleSubmission","App","setMovies","addMovie","useCallback","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb205c13.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null;\n};\n\nexport const MovieCard: React.FC<Props> = React.memo(\n  ({ movie }) => (\n    movie && (\n      <div className=\"card\">\n        <div className=\"card-image\" data-cy=\"card-image\">\n\n          <figure className=\"image is-4by3\">\n            <img\n              src={movie.Poster}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"images/imdb-logo.jpeg\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\" data-cy=\"content\">\n            {movie.Plot}\n            <br />\n          </div>\n        </div>\n      </div>\n    )\n  ),\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = React.memo(\n  ({ movies }) => (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  ),\n);\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  handleAddMovie: (newMovie: Movie) => void;\n  movies: Movie[];\n}\n\ntype Event = React.FormEvent<HTMLFormElement>\n| React.MouseEvent<HTMLButtonElement, MouseEvent>;\n\nexport const FindMovie: React.FC<Props> = React.memo(\n  ({ handleAddMovie, movies }) => {\n    const [title, setTitle] = useState('');\n    const [hasFoundMovie, setHasFoundMovie] = useState(true);\n    const [newMovie, setNewMovie] = useState<Movie | null>(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isMovieRepeated, setIsMovieRepeated] = useState(false);\n\n    const findMovie = async (event: Event) => {\n      setIsLoading(true);\n      event.preventDefault();\n\n      try {\n        const response = await fetch(`https://www.omdbapi.com/?apikey=1c29b9bf&t=${title}`);\n        const movie = await response.json();\n\n        const isMovieListed = movies.some((\n          ({ imdbID }) => imdbID === movie.imdbID\n        ));\n\n        if (isMovieListed) {\n          setIsMovieRepeated(true);\n          setIsLoading(false);\n\n          return;\n        }\n\n        if (movie.Response === 'False') {\n          setHasFoundMovie(false);\n          setIsLoading(false);\n\n          return;\n        }\n\n        setNewMovie(movie);\n      } catch (error) {\n        throw new Error(`${error}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    function handleSubmission(\n      event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    ) {\n      event.preventDefault();\n\n      setTitle('');\n      setNewMovie(null);\n    }\n\n    return (\n      <>\n        <form\n          className=\"find-movie\"\n          onSubmit={(event) => {\n            findMovie(event);\n          }}\n        >\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"movie-title\">\n              Movie title\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={cn('input', { 'is-danger': !hasFoundMovie })}\n                value={title}\n                onChange={(event) => {\n                  setTitle(event.target.value);\n                  setHasFoundMovie(true);\n                  setIsMovieRepeated(false);\n                }}\n              />\n            </div>\n\n            {hasFoundMovie || (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n            {isMovieRepeated && (\n              <p className=\"help is-danger\">\n                Movie already exists\n              </p>\n            )}\n          </div>\n\n          <div className=\"field is-grouped\">\n            <div className=\"control\">\n              <button\n                type=\"button\"\n                className={cn('button is-light', { 'is-loading': isLoading })}\n                onClick={findMovie}\n              >\n                Find a movie\n              </button>\n            </div>\n\n            <div className=\"control\">\n              <button\n                type=\"submit\"\n                className=\"button is-primary\"\n                onClick={(event) => {\n                  if (newMovie) {\n                    handleAddMovie(newMovie);\n                    handleSubmission(event);\n                  }\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          </div>\n        </form>\n\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={newMovie} />\n        </div>\n      </>\n    );\n  },\n);\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback(\n    (newMovie: Movie) => {\n      setMovies([...movies, newMovie]);\n    },\n    [movies],\n  );\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          handleAddMovie={addMovie}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}